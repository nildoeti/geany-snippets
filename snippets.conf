#~ # Geany's snippets configuration file
#~ #
#~ # use \n or %newline% for a new line (it will be replaced by the used EOL char(s) - LF, CR/LF, CR).
#~ # use \t or %ws% for an indentation step, it will be replaced according to the current document's indent mode.
#~ # use \s to force whitespace at beginning or end of a value ('key= value' won't work, use 'key=\svalue').
#~ # use %key% for all keys defined in the [Special] section.
#~ # use %cursor% to define where the cursor should be placed after completion. You can define multiple
#~ #     %cursor% wildcards and use the "Move cursor in snippet" to jump to the next defined cursor
#~ #     position in the completed snippet.
#~ # You can define a section for each supported filetype to overwrite default settings, the section
#~ # name must match exactly the internal filetype name, run 'geany --ft-names' for a full list.
#~ #
#~ # Additionally, you can use most of the template wildcards like {developer}, {command:...},
#~ # or {date} in the snippets.
#~ # See the documentation for details.

#~ # For a list of available filetype names, execute:
#~ # geany --ft-names

#~ # Default is used for all filetypes and keys can be overwritten by [filetype] sections
#~[Default]

#~ # special keys to be used in other snippets, cannot be used "standalone"
#~ # can be used by %key%, e.g. %brace_open%
#~ # nesting of special keys is not supported (e.g. brace_open=\n{\n%brace_close% won't work)
#~ # key "wordchars" is very special, it defines the word delimiting characters when looking for
#~ # a word to auto complete, leave commented to use the default wordchars
[Special]
brace_open=\n{\n\t
brace_close=}\n
block=\n{\n\t%cursor%\n}
block_cursor=\n{\n\t%cursor%\n}
wordchars=_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789

#~ # Optional keybindings to insert snippets
#~ # Note: these can be overridden by Geany's configurable keybindings
#~ [Keybindings]
#~ #for=<Ctrl>7

[C]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for (i = 0; i < %cursor%; i++)%block_cursor%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%

[C++]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for (int i = 0; i < %cursor%; i++)%brace_open%\n%brace_close%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%
try=try%block%\ncatch (%cursor%)%block_cursor%

[Java]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for (int i = 0; i < %cursor%; i++)%brace_open%\n%brace_close%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%
try=try%block%\ncatch (%cursor%)%block_cursor%

[PHP]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for ($i = 0; $i < %cursor%; $i++)%brace_open%\n%brace_close%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%
try=try%block%\ncatch (%cursor%)%block_cursor%
cakeform=echo $form->create('Formulario');\necho $form->input('input');\necho $form->end('Enviar');
function=function %cursor% () {\n	\n}
input=echo $form->input('%cursor%');
debug=function pr ($array) {\n	echo '<pre>';\n	print_r($array);\n	echo '</pre>';\n}\n
class=class %cursor% extends %cursor%AppController {\n	%cursor%\n}
controller=class %cursor% extends %cursor%AppController {\n	%cursor%\n}
model=class %cursor% extends AppModel {\n	\n}
helper=class %cursor%Helper extends Helper {\n	\n}
component=class %cursor%Component extends Object {\n	\n}
static=public static function %cursor% () {\n	\n}\n
public=public function %cursor% () {\n	\n}\n
private=private function %cursor% () {\n	\n}\n
protected=protected function %cursor% () {\n	\n}\n
log=\n	$fp = fopen('log.txt', 'a+');\n	$write = null;\n	foreach ($_REQUEST as $key => $value) {\n		$write


[Javascript]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for (i = 0; i < %cursor%; i++)%block_cursor%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%
try=try%block%\ncatch (%cursor%)%block_cursor%
log=console.log('%cursor%');
com=\n/*  %cursor%  */\n
var=var %cursor% = '%cursor%';
let=let %cursor% ;
const=const = %cursor%;
ready=$(document).ready(function() {\n	%cursor%$('.class').\n});
click=$('%cursor%').click(function() {\n	%cursor%\n});
hover=$('%cursor%').hover(function() {\n	%cursor%\n});
toggle=$('%cursor%').toggle(function() {\n	%cursor%\n});
submit=$('%cursor%').submit(function() {\n	%cursor%\n});
log=console.log(%cursor%);
function=function %cursor% () {\n	\n}
map=map(%cursor%)

[C#]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for (i = 0; i < %cursor%; i++)%block_cursor%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%
try=try%block%\ncatch (%cursor%)%block_cursor%

[Vala]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for (i = 0; i < %cursor%; i++)%block_cursor%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%
try=try%block%\ncatch (%cursor%)%block_cursor%

[ActionScript]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for (i = 0; i < %cursor%; i++)%block_cursor%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%
try=try%block%\ncatch (%cursor%)%block_cursor%

[Python]
for=for i in xrange(%cursor%):\n\t
doc=""" %cursor% """\n
elif=elif %cursor%:\n\t
else=else:\n\t%cursor%
if=if %cursor%:\n\t
from=from %cursor% import \n
main=if __name__ == '__main__':\n\t%cursor%
class=class %cursor%(object):\n\t""" Class doc """\n\t\n\tdef __init__ (self):\n\t\t""" Class initialiser """\n\t\tpass
def=def %cursor%(self):\n\t""" Function doc\n\n\t@param PARAM: DESCRIPTION\n\t@return RETURN: DESCRIPTION\n\t"""\n\t
get=def get%cursor%(self): return self._var\n
set=def set%cursor%(self): self._var = var\n
.=self.%cursor%
prop=property %cursor%:\n\tdef __get__(self):\n\t\treturn self.%cursor%_get()\n\n\tdef __set__(self, value):\n\t\tself.%cursor%_set(value)
try=try:\n\t%cursor%\nexcept Exception, e:\n\t
py=#!/usr/bin/env python\n#-*- coding:utf-8 -*-\n\n%cursor%
while=while %cursor%:\n\t
with=with %cursor%:\n\t
head="""\n\t%cursor%PROJECT - MODULE\n\n\tDESCRIPTION\n\n\t@copyright: {year} by {developer} <{mail}>\n\t@license: GNU GPL, see COPYING for details.\n"""\n
pp=from pprint import pprint\npprint(%cursor%)
cod=# coding: utf-8
dt=from datetime import datetime

[Ferite]
iferr=iferr%block_cursor%fix%block%
monitor=monitor%block_cursor%handle%block%

[Haskell]

[HTML]
html=<!DOCTYPE html>\n<html lang="en">\n<head>\n\t<meta charset="UTF-8">\n\t<meta http-equiv="X-UA-Compatible" content="IE=edge">\n\t<meta name="viewport" content="width=device-width, initial-scale=1.0">\n\t<link rel="stylesheet" href="">\n\t<title>Document</title>\n</head>\n<body>\n\n\n</body>\n</html>
table=<table>\n\t<tr>\n\t\t<td>%cursor%</td>\n\t</tr>\n</table>
input=<input type="%cursor%" name="" id="" size="" maxlength="" />
checkbox=<input type="checkbox" name="%cursor%" id="" />
radio=<input type="radio" name="%cursor%" id="" />
textarea=<textarea name="%cursor%" id="" rows="" cols=""></textarea>
select=<select name="%cursor%" id="">\n	<option value=""></option>\n</select>
button=<button type="submit" value="%cursor%"></button>
h1=<h1>%cursor%</h1>
h2=<h2>%cursor%</h2>
h3=<h3>%cursor%</h3>
h4=<h4>%cursor%</h4>
h5=<h5>%cursor%</h5>
h6=<h6>%cursor%</h6>

[CSS]
radius=-moz-border-radius:%cursor%0px;-webkit-border-radius:0px;border-radius:0px;
structure=* {margin:0;padding:0;list-style:none;}\nbody {font-family: Arial,Tahoma,Verdana,sans;}

[Erlang]
case=case %cursor% of\n\t%cursor% -> %cursor%\nend
if=if\n\t%cursor% -> %cursor%\nend
begin=begin\n\t%cursor%\nend
fun=fun(%cursor%) ->\n\t%cursor%\nend
try=try %cursor% of\n\t%cursor% ->\n\t%cursor%\ncatch\n\t%cursor% ->\n\t%cursor%\nend
module=-module(%cursor%).
export=-export(%cursor%).
compile=-compile(%cursor%).
include=-include(%cursor%).
